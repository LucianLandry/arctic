# Version 1.3:
Optimization: Prefetch moves sooner (~2.5% speedup)
Refactored into C++ class: ListT -> arctic::List (~1.2% speedup)
Engine/Thinker refactoring: communicate w/EventQueues instead of sockets (~0.8%
    slowdown); Thinker can now move itself when it reaches its goaltime.

# Version 1.2:
Refactored MoveT struct (added methods, removed unaligned load/store assumption)
Bugfix: fixed csOO + csFIDE-style strings never showing check(mate).
Converted code to use platform-agnostic std::thread.
Implemented platform-agnostic Semaphore class and converted everyone to use it.
Updated license from LGPL 2 to MPL 2.0 (except conio.[ch])
uiXboard: fix bad "ping" command handling in extremely rare cases; fix poorly
    formatted error strings (no newline!); slightly better error handling;
    implemented "hint" command.
Displayed search depth now consistently starts at 1, not 0.
Bugfix: fix think time w/infinite clock but per-move limit.
Bugfix: crash when switching on the fly from xboard to uci interface
uiUci: handle 'ponder + searchmoves' sanely; attempt to report a bestmove when
    we stop pondering; more correct ponder info and score.
Refactored into C++ classes: SpinlockT -> arctic::Spinlock (1.6% speedup +
    platform-agnostic), PvT -> (SearchPv, DisplayPv, HintPv), GameT -> Game,
    TransTable* functionality -> Trans(Position)Table, SaveGameT -> SaveGame,
    SwitcherContextT -> Switcher, history heuristic functionality ->
    HistoryWindow, ThinkContextT -> (Engine, Thinker).
Bugfix: fix bad parsing of user-specified transposition table size > 4 GiB.
Made number of search threads configurable from uiUci and uiXboard.
Bugfix: moveToStringMnSAN(): fix overly zealous move disambiguation.
Work for github upload: better documentation; dump errlog in a better place;
    introduce cmake options for friendlier build; fix gcc-6.2 build issues

# Version 1.1:
Build improvements: use Git for version control, cmake for building
Bugfix: uiXboard: handle 0 increment and 0 moves per timecontrol properly
Bugfix: uiUci: fix 'searchMoves' parameter handling (untested)
Cleanup: use C99 bool where I can.  Also cleanup no-move detection.
Bugfix: must use llabs() instead of abs() for handling time.
Reimplemented transposition table (presumably a better one), and added hooks
        for controlling it to uiUci/uiXboard.
Use a "smarter" resign strategy (try not to resign too early)
Add command-line option to override default UI.
uiNcurses: make cursor look nicer on Linux console; fix UIBarfString() backspace
Bugfix: fix goalTime calc for ICS, and when increment larger than starting time
Refactored castling and make-move code.
Converted most files to .cpp and made buildable under clang++.  (~5% speedup)
Refactored Pieces into their own class. (~1.2% slowdown)
Bugfix: fixed futility check (potentialImprovement() looked at wrong player's
        pieces)
Refactored MoveList (and removed MLIST_MAX_MOVES limit) (7% slowdown).
Refactored Board and Position (~3% slowdown, but fixed a minor biasDraw issue).
Removed MAX_NUM_PROCS limitation (except for basic user input validation).
Refactored Clock API + made PerMoveTime() take total clock time into account.
Bugfix: we were jumping between 2 mating positions (because nothing better was
        in the transposition table) until the opponent could draw.
Refactored Eval(uations) into their own class, and made PV contain a true eval.

# Version 1.0:
Implemented depth-1 futility pruning.
Fix capture-king bug (enpassant codepath could reset dc to FLAG)
Made pawn moves symmetrical (prefer kingside capture).
Cleanup: Split ref.h up; module re-org; use builtin abs(); proper MoveT
Improved Makefile.
Pick system-dependent intelligent default for hash memory size.
SwitcherContextT rework.
Bugfix: fix corrupted hash (bestComstr must be array, or could be switched out
	from under us!)
Bugfix: make buildSanString() work properly when src rank+file are different.
Implement undo+redo (including move takeback)
Bugfix: edit-position (bump MLIST_MAX_MOVES, fix adjacent king detection)
Bugfix: xboard: make any applicable move before claiming a claimed draw.
Move ordering: check hashed positions first (~20% improvement)
Fix occasional thinker recv()/send() asserts.
Prefer king castling moves.
Made number of cpu threads runtime-configurable.
Bugfix: fix crash when forcing move before decent move has been found.
Bugfix: uiNcurses: fix display of clocks when they go negative.
Implement preferred variation (PV), use it for move preference.
Bugfix: fix repeatPly calc (should improve hashing)
Improved endgame (KQ vs KN, KQ vs KB)
uiXboard: -- implemented 'ping', 'setboard'.
	  -- improved PV output (nodes, timeTaken)
Implement pondering.
Bugfix: take captures into account in endgame eval when we only have king.
Minor changes for x86-64 + gcc 4.3.2.
Fix capture-king bug (discovered check via enpassant when we are in check ourselves)
Implement (optional) per-move timelimit for all interfaces.
Implement separate time control period + increment for all interfaces.
Compute optimization: brmove(), minimax(), addmove(), attacked(), hashlock ->
	aSpinlockT, logging disabled by default, use global stats (~9.4%)
Implement UCI interface.

# Version 0.9:
alpha-search -> alpha-beta search (oops)
hashing: -- Use highbound/lowbound instead of eval+alpha.
	 -- Always update entire entry (could change out from under us due to
		hp->ply)
	 -- mightDraw optimization. (hash in more positions)
Prettier PV (Na3 instead of b1a3, etc.)
Time display accurate to (some) hundredths of a sec.
Move immediately if we found a mate.
Bugfix: dirf(from, to), from == to, should be DIRFLAG, affects genslide())
Don't consider castle during quiesce.
Implement random-move support (decreases playing strength, pv not followed?)
Console UI: -- added status (random, level, black+white, hiswin)
            -- Bugfix: Blink cursor after board flip
            -- Implemented UIBarfString()
	    -- piece color: allow all 16 colors
Warning fixes, gcc 4.1.2 (sarge -> etch == ~10% speedup, 2% before recompile)
Computer moves immediately on 1st ply (in normal game)
Implemented basic clock support.
Bugfix: calcCapWorth(): evaluate promotions correctly.
Implemented multiple-computer-thread support. (~25% improvement?)
Fix capture-king bug (en-passant capture from same rank as K, our pawn
	interposes between captured pawn and enemy king, king put into check)
Fix capture-king bug (en-passant capture: was not accounting for double-
	discovered check)
Bugfix: several "< 63" off-by-one errors in init.c (history table, zobrist)

# Version 0.8:
Rudimentary Makefile support.
Implement asciiToNative() and friends.
Implement edit-position functionality.
Fractional eval capability.
Implement transposition table.
Don't think if only one move to make.
Fix capture-king bug (en-passant captured pawn discovered check, while *in*
	check)
Fix capture-king bug (en-passant capture from same rank as K could put K in
	check by R or Q)
Add depth to displayed PV.
concheck: don't calc zobrist during unmakemove castling rook-move.
optimization: CHECK calc change, 2d array least indexes to pow2, findpins(),
	pawnmove(), mlistGenerate(), addsrccoord -> inline, genslide(),
	nightmove().  About 10% improvement.
Improved endgame (KR vs k, KQ vs k, KBB vs k)
Separate UI thread (so I can move now/quit immediately etc)
Implemented move-now functionality.
Chess UI interface (xboard).

# Version 0.7:
Implement autopass.
optimization via gprof (->CHECK(), TOLOWER(), optimize kingmove(),
	addmove() split up)
check for castle before other king moves.
Implement incremental search.
Move pv to its own structure.
Implement quiescing.
gendclist() uses PListT instead of tuples.  findcoord() goes away.
enpass now in comstr[2] before makemove().
promotions/en passant taken into account when evaluating strgh in minimax()
black direction preference now (mostly) like white direction preference during
	movgen.
moved precalc stuff out to its own structure.
move unmakemove info to its own structure.
worth is precalced now.
Detect draw due to insufficient material.
Detect draw due to fifty-move rule.
Converted PpRrNnBbQqKk to more compact representation (PAWN, BKING, etc)
Fixed beginning-of-game hiswin bug (-1 doesn't work if hiswin > 1)
Fixed probable bug on playermove promote (indexing into wrong move).
Fix castling bug (newcbyte() before coord update in makemove())
Detect draw due to threefold repetition.

# Version 0.6:
Port to linux (get conio running, 40-chr screen to 80-chr, fix warnings
	(char -> uint8), etc)
Tons of general cleanup -- reformatting, style, documentation,
	ncopy() -> memcpy() etc.
computermove stats moved to its own structure.
All ui functionality moved to ui.c
Print move number.
Fix capture-king bug (knight pins in cappose(), I think)
Fix capture-king bug (en-passant captured pawn discovered check)
Implement save/restore functionality.
Implement log functionality.
Implement flip-board functionality.
Try pawn e2e4 moves before e2e3 moves.
Try king moves last instead of first.
hiswin went to short, so it will not rollover.

# Version 0.5:
Last version recovered from DOS environment.
